{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/environments/environment.ts","./src/app/auth/components/reset-password/reset-password.component.ts","./src/app/auth/components/reset-password/reset-password.component.html","./src/app/core/core-routing.module.ts","./src/app/core/components/header/header.component.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/core/core.module.ts","./src/app/auth/auth.service.ts","./src/app/app-routing.module.ts","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login', \n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'reset-password',\n    component: ResetPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  resetPasswordForm: FormGroup;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService\n    ) {\n    this.resetPasswordForm = this.formBuilder.group({\n      email: ''\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(value: {email: string}) {\n    const result = this.authService.resetPassword(value.email);\n  }\n\n}\n","<div class=\"reset-password\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n  <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit(resetPasswordForm.value)\">\n    <mat-card\n      fxFlexAlign=\"center\"\n      fxFlex.xs=\"100%\"\n      fxFlex.gt-sm=\"400px\"\n      class=\"mat-elevation-z5\">\n      <mat-card-header>\n        <mat-card-title> Login </mat-card-title>\n        <mat-card-subtitle> Please enter your login details </mat-card-subtitle>\n      </mat-card-header>\n\n      <mat-card-content fxLayout=\"column\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>email</mat-label>\n          <input matInput email type=\"email\" required formControlName=\"email\" />\n          <mat-icon matSuffix>person</mat-icon>\n        </mat-form-field>\n        <div class=\"text-small\">\n          Click <a routerLink=\"/login\">here</a> to login\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button type=\"submit\" color=\"accent\" mat-raised-button>Send</button>\n      </mat-card-actions>\n\n      <mat-card-footer> </mat-card-footer>\n    </mat-card>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  failedAttempt: false;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly router: Router) {\n    this.loginForm = this.formBuilder.group({email: ['', [\n      Validators.email,\n      Validators.required\n    ]], password: ['',\n    [\n      Validators.required\n    ]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(value: any) {\n    const attempt = this.authService.login(value);\n    this.router.navigate(['/admin'])\n  }\n\n}\n","<div class=\"login\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n    <mat-card\n      fxFlexAlign=\"center\"\n      fxFlex.xs=\"100%\"\n      fxFlex.gt-sm=\"400px\"\n      class=\"mat-elevation-z5\"\n    >\n      <mat-card-header>\n        <mat-card-title> Login </mat-card-title>\n        <mat-card-subtitle> Please enter your login details </mat-card-subtitle>\n      </mat-card-header>\n\n      <mat-card-content fxLayout=\"column\">\n        <div class=\"text-small warn\" *ngIf=\"failedAttempt\" color=\"warn\">Invalid login credentails</div>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>email</mat-label>\n          <input matInput email type=\"email\" required formControlName=\"email\" >\n          <mat-icon matSuffix>mail</mat-icon>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>password</mat-label>\n          <input matInput type=\"password\" required formControlName=\"password\">\n          <mat-icon matSuffix>lock</mat-icon>\n        </mat-form-field>\n        <div class=\"text-small mb-1\">\n          <a routerLink=\"/reset-password\">reset password</a>\n        </div>\n        \n        <div class=\"text-small\">\n          Don't have an account? click <a routerLink=\"/register\">here</a> to\n          register\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button type=\"submit\" color=\"accent\" [disabled]=\"loginForm.invalid\" mat-raised-button>Login</button>\n      </mat-card-actions>\n\n      <mat-card-footer> </mat-card-footer>\n    </mat-card>\n  </form>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'FEIMS';\n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\n\n//Material modules\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, ResetPasswordComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CoreModule } from './core/core.module';\n\nimport { MatCardModule } from '@angular/material/card';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    CoreModule,\n    AuthModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreRoutingModule } from './core-routing.module';\n\n//Material modules\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { HeaderComponent } from './components/header/header.component';\n\n\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    CoreRoutingModule,\n    FlexLayoutModule,\n    MatToolbarModule\n  ],\n  exports: [\n    HeaderComponent\n  ]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  login(credentails: {email: String, password: string}): boolean {\n    return true;\n  }\n\n  register(value: {email: String, password: string}): string[] {\n    return null;\n  }\n\n  resetPassword(value: string): boolean {\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n//import { LoginComponent } from './auth/components/login/login.component';\n//import { RegisterComponent } from './auth/components/register/register.component';\n//import { ResetPasswordComponent } from './auth/components/reset-password/reset-password.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path : '', \n    loadChildren : ()=>import('./auth/auth.module').then(mod => mod.AuthModule)\n  },\n  {\n    path: 'admin',\n    loadChildren : ()=>import('./features/admin/admin.module').then(mod=>mod.AdminModule)\n  },\n  {\n    path : \"**\",\n    component : NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerGroup: FormGroup;\n\n  constructor(private readonly formBuilder: FormBuilder) {\n    this.registerGroup = formBuilder.group({\n      email: ['',\n      [\n        Validators.required,\n        Validators.email\n      ]],\n      password: ['', [\n        Validators.required\n      ]],\n      confirmPassword: ['',\n      [\n        Validators.required\n      ]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(value: any) {\n    \n  }\n\n}\n","<div class=\"register\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n  <form [formGroup]=\"registerGroup\" (ngSubmit)=\"onSubmit(registerGroup.value)\">\n    <mat-card\n      fxFlexAlign=\"center\"\n      fxFlex.xs=\"100%\"\n      fxFlex.gt-sm=\"400px\"\n      class=\"mat-elevation-z5\"\n    >\n      <mat-card-header>\n        <mat-card-title> Register </mat-card-title>\n        <mat-card-subtitle> Please enter your registration details </mat-card-subtitle>\n      </mat-card-header>\n\n      <mat-card-content fxLayout=\"column\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>email</mat-label>\n          <input matInput email type=\"email\" required formControlName=\"email\" />\n          <mat-icon matSuffix>mail</mat-icon>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>password</mat-label>\n          <input matInput type=\"password\" required formControlName=\"password\" />\n          <mat-icon matSuffix>lock</mat-icon>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>password</mat-label>\n          <input\n            matInput\n            type=\"password\"\n            required\n            formControlName=\"confirmPassword\"\n          />\n          <mat-icon matSuffix>lock</mat-icon>\n        </mat-form-field>\n        <div>\n          Already have an account? click <a routerLink=\"/login\">here</a> to\n          login\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button type=\"submit\" [disabled]=\"registerGroup.invalid\" color=\"accent\" mat-raised-button>Register</button>\n      </mat-card-actions>\n\n      <mat-card-footer> </mat-card-footer>\n    </mat-card>\n  </form>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}